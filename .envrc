# Handy script for activating the local venv
# Can be sourced manually from a bash shell, or used with direnv ( https://direnv.net/ )

echo "Configuring shell for rdvc-demo-project:"

if [ -n "$ZSH_VERSION" ]; then
   _SOURCE_SHELL=zsh
   _SCRIPT_DIR="$( cd "$( dirname "${(%):-%N}" )" &> /dev/null && pwd )"
elif [ -n "$BASH_VERSION" ]; then
   _SOURCE_SHELL=bash
   _SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
else
   echo "Unsupported shell"
   exit 1
fi


_VENV_DIR=${_SCRIPT_DIR}/.venv
echo "Detected $_SOURCE_SHELL"
echo "_VENV_DIR=$_VENV_DIR"

if [ -d "${_VENV_DIR}" ]; then
    echo "[+] Found virtual environment: ${_VENV_DIR}"
else
    echo "[!] Virtual environment not found: ${_VENV_DIR}"
    echo "[?] Have you tried running a init_python_venv.sh script first?"
    return
fi


if [[ "$OSTYPE" == "linux-gnu" || "$OSTYPE" == "darwin"*  ]]; then
    _ACTIVATE="${_VENV_DIR}/bin/activate"
elif [[ "$OSTYPE" == "msys" ]]; then
    _ACTIVATE="${_VENV_DIR}/Scripts/activate"
fi

if [ -f "${_ACTIVATE}" ]; then
    echo "[+] Activating virtual environment..."
    source "${_ACTIVATE}"
else
    echo "[!] Could not find virtual environment activation script: ${_ACTIVATE}"
fi

echo "Default Python is now $(which python)"


unset _SCRIPT_DIR
unset _VENV_DIR
unset _PYTHON
unset _ACTIVATE
unset _SOURCE_SHELL
